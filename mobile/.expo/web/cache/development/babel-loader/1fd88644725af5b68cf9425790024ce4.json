{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Viviane\\\\Documents\\\\dev\\\\nextlevelweek\\\\mobile\\\\src\\\\pages\\\\Points\\\\index.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Constants from \"expo-constants\";\nimport { Feather as Icon } from \"@expo/vector-icons\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { SvgUri } from \"react-native-svg\";\nimport * as Location from 'expo-location';\nimport api from \"../../services/api\";\n\nvar Points = function Points() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      items = _useState2[0],\n      setItems = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectedItems = _useState4[0],\n      setSelectedItems = _useState4[1];\n\n  var _useState5 = useState([0, 0]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      initialPosition = _useState6[0],\n      setInitialPosition = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      points = _useState8[0],\n      setPoints = _useState8[1];\n\n  var navigation = useNavigation();\n  useEffect(function () {\n    function loadPosition() {\n      var _await$Location$reque, status, location, _location$coords, latitude, longitude;\n\n      return _regeneratorRuntime.async(function loadPosition$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Location.requestPermissionsAsync());\n\n            case 2:\n              _await$Location$reque = _context.sent;\n              status = _await$Location$reque.status;\n\n              if (!(status !== 'granted')) {\n                _context.next = 7;\n                break;\n              }\n\n              Alert.alert(\"Alerta\", \"Precisamos da permissão de localização\");\n              return _context.abrupt(\"return\");\n\n            case 7:\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync());\n\n            case 9:\n              location = _context.sent;\n              _location$coords = location.coords, latitude = _location$coords.latitude, longitude = _location$coords.longitude;\n              setInitialPosition([latitude, longitude]);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    loadPosition();\n  }, []);\n  useEffect(function () {\n    api.get('points', {\n      params: {\n        city: 'SP',\n        uf: 'SP',\n        items: [1, 2]\n      }\n    }).then(function (response) {\n      setPoints(response.data);\n    });\n  }, []);\n  useEffect(function () {\n    api.get('items').then(function (response) {\n      setItems(response.data);\n    });\n  }, []);\n\n  function handleSelectItem(id) {\n    var alreadySelected = selectedItems.findIndex(function (item) {\n      return item === id;\n    });\n\n    if (alreadySelected >= 0) {\n      var filtereditems = selectedItems.filter(function (item) {\n        return item !== id;\n      });\n      setSelectedItems(filtereditems);\n    } else {\n      setSelectedItems([].concat(_toConsumableArray(selectedItems), [id]));\n    }\n  }\n\n  function handleBack() {\n    navigation.goBack();\n  }\n\n  function handleToDetail() {\n    navigation.navigate(\"Detail\");\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: handleBack,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, React.createElement(Icon, {\n    name: \"arrow-left\",\n    size: 20,\n    color: \"#34cb79\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  })), React.createElement(Text, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, \"Bem vindo.\"), React.createElement(Text, {\n    style: styles.description,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, \"Encontre no mapa um ponto de coleta.\")), React.createElement(View, {\n    style: styles.itemsContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, React.createElement(ScrollView, {\n    horizontal: true,\n    contentContainerStyle: {\n      paddingHorizontal: 20\n    },\n    showsHorizontalScrollIndicator: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, items.map(function (item) {\n    return React.createElement(TouchableOpacity, {\n      key: String(item.id),\n      style: [styles.item, selectedItems.includes(item.id) ? styles.selectedItem : {}],\n      onPress: function onPress() {\n        return handleSelectItem(item.id);\n      },\n      activeOpacity: 0.6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }, React.createElement(SvgUri, {\n      width: 42,\n      height: 42,\n      uri: item.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }), React.createElement(Text, {\n      style: styles.itemTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, item.name));\n  }))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingHorizontal: 32,\n    paddingTop: 20 + Constants.statusBarHeight\n  },\n  title: {\n    fontSize: 20,\n    fontFamily: \"Ubuntu_700Bold\",\n    marginTop: 24\n  },\n  description: {\n    color: \"#6C6C80\",\n    fontSize: 16,\n    marginTop: 4,\n    fontFamily: \"Roboto_400Regular\"\n  },\n  mapContainer: {\n    flex: 1,\n    width: \"100%\",\n    borderRadius: 10,\n    overflow: \"hidden\",\n    marginTop: 16\n  },\n  map: {\n    width: \"100%\",\n    height: \"100%\"\n  },\n  mapMarker: {\n    width: 90,\n    height: 80\n  },\n  mapMarkerContainer: {\n    width: 90,\n    height: 70,\n    backgroundColor: \"#34CB79\",\n    flexDirection: \"column\",\n    borderRadius: 8,\n    overflow: \"hidden\",\n    alignItems: \"center\"\n  },\n  mapMarkerImage: {\n    width: 90,\n    height: 45,\n    resizeMode: \"cover\"\n  },\n  mapMarkerTitle: {\n    flex: 1,\n    fontFamily: \"Roboto_400Regular\",\n    color: \"#FFF\",\n    fontSize: 13,\n    lineHeight: 23\n  },\n  itemsContainer: {\n    flexDirection: \"row\",\n    marginTop: 16,\n    marginBottom: 32\n  },\n  item: {\n    backgroundColor: \"#fff\",\n    borderWidth: 2,\n    borderColor: \"#eee\",\n    height: 120,\n    width: 120,\n    borderRadius: 8,\n    paddingHorizontal: 16,\n    paddingTop: 20,\n    paddingBottom: 16,\n    marginRight: 8,\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    textAlign: \"center\"\n  },\n  selectedItem: {\n    borderColor: \"#34CB79\",\n    borderWidth: 2\n  },\n  itemTitle: {\n    fontFamily: \"Roboto_400Regular\",\n    textAlign: \"center\",\n    fontSize: 13\n  }\n});\nexport default Points;","map":{"version":3,"sources":["C:/Users/Viviane/Documents/dev/nextlevelweek/mobile/src/pages/Points/index.tsx"],"names":["React","useState","useEffect","Constants","Feather","Icon","useNavigation","SvgUri","Location","api","Points","items","setItems","selectedItems","setSelectedItems","initialPosition","setInitialPosition","points","setPoints","navigation","loadPosition","requestPermissionsAsync","status","Alert","alert","getCurrentPositionAsync","location","coords","latitude","longitude","get","params","city","uf","then","response","data","handleSelectItem","id","alreadySelected","findIndex","item","filtereditems","filter","handleBack","goBack","handleToDetail","navigate","styles","container","title","description","itemsContainer","paddingHorizontal","map","String","includes","selectedItem","image","itemTitle","name","StyleSheet","create","flex","paddingTop","statusBarHeight","fontSize","fontFamily","marginTop","color","mapContainer","width","borderRadius","overflow","height","mapMarker","mapMarkerContainer","backgroundColor","flexDirection","alignItems","mapMarkerImage","resizeMode","mapMarkerTitle","lineHeight","marginBottom","borderWidth","borderColor","paddingBottom","marginRight","justifyContent","textAlign"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport { View, Text, StyleSheet, TouchableOpacity, ScrollView, Image, Alert } from \"react-native\";\r\nimport Constants from \"expo-constants\";\r\nimport { Feather as Icon } from \"@expo/vector-icons\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport MapView, { Marker } from \"react-native-maps\";\r\nimport { SvgUri } from \"react-native-svg\";\r\nimport * as Location from 'expo-location'\r\nimport api from '../../services/api';\r\n\r\ninterface Item {\r\n  id: number;\r\n  name: string;\r\n  image: string;\r\n}\r\n\r\ninterface Point {\r\n  id: number;\r\n  name: string;\r\n  image_url: string;\r\n  lat: number;\r\n  lgt: number;\r\n}\r\n\r\n\r\nconst Points = () => {\r\n  const [items, setItems] = useState<Item[]>([]);  \r\n  const [selectedItems, setSelectedItems] = useState<number[]>([]);\r\n  const [initialPosition, setInitialPosition] = useState<[number, number]>([0,0]);\r\n  const [points, setPoints] = useState<Point[]>([]);\r\n\r\n  const navigation = useNavigation();\r\n\r\n  useEffect(() => {\r\n    async function loadPosition(){\r\n      const {status} = await Location.requestPermissionsAsync();\r\n      if(status !=='granted'){\r\n        Alert.alert(\"Alerta\", \"Precisamos da permissão de localização\");\r\n        return;\r\n      }\r\n      const location = await Location.getCurrentPositionAsync();\r\n\r\n      const { latitude, longitude} = location.coords;\r\n\r\n      setInitialPosition([latitude, longitude]);\r\n    }\r\n\r\n    loadPosition();\r\n\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    api.get('points', {\r\n      params: {\r\n        city: 'SP',\r\n        uf: 'SP',\r\n        items: [1,2]\r\n      }\r\n    }).then( response => {\r\n      setPoints(response.data);\r\n    }    );\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    api.get('items').then(response => {\r\n      setItems(response.data);\r\n    });\r\n  }, []);\r\n\r\n  function handleSelectItem(id: number){\r\n    const alreadySelected = selectedItems.findIndex(item => item === id);\r\n    if(alreadySelected>=0){\r\n      const filtereditems = selectedItems.filter(item => item !== id);\r\n      setSelectedItems(filtereditems);\r\n    } else{\r\n    setSelectedItems([...selectedItems, id]);\r\n    }\r\n  }\r\n\r\n  function handleBack() {\r\n    navigation.goBack();\r\n  }\r\n  function handleToDetail() {\r\n    navigation.navigate(\"Detail\");\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <View style={styles.container}>\r\n        <TouchableOpacity onPress={handleBack}>\r\n          <Icon name=\"arrow-left\" size={20} color=\"#34cb79\" />\r\n        </TouchableOpacity>\r\n\r\n        <Text style={styles.title}>Bem vindo.</Text>\r\n        <Text style={styles.description}>\r\n          Encontre no mapa um ponto de coleta.\r\n        </Text>\r\n      \r\n      </View>\r\n      <View style={styles.itemsContainer}>\r\n        <ScrollView\r\n          horizontal\r\n          contentContainerStyle={{ paddingHorizontal: 20 }}\r\n          showsHorizontalScrollIndicator={false}\r\n        >\r\n        {items.map(item =>(\r\n          <TouchableOpacity key={String(item.id)} \r\n          style={[styles.item, \r\n            selectedItems.includes(item.id) ? styles.selectedItem : {}]} \r\n          onPress={() => handleSelectItem(item.id)} activeOpacity={0.6}\r\n          >\r\n            <SvgUri\r\n              width={42}\r\n              height={42}\r\n              uri={item.image}\r\n            />\r\n            <Text style={styles.itemTitle}>{item.name}</Text>\r\n          </TouchableOpacity>       \r\n        )\r\n\r\n        )}           \r\n        </ScrollView>\r\n      </View>\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    paddingHorizontal: 32,\r\n    paddingTop: 20 + Constants.statusBarHeight,\r\n  },\r\n\r\n  title: {\r\n    fontSize: 20,\r\n    fontFamily: \"Ubuntu_700Bold\",\r\n    marginTop: 24,\r\n  },\r\n\r\n  description: {\r\n    color: \"#6C6C80\",\r\n    fontSize: 16,\r\n    marginTop: 4,\r\n    fontFamily: \"Roboto_400Regular\",\r\n  },\r\n\r\n  mapContainer: {\r\n    flex: 1,\r\n    width: \"100%\",\r\n    borderRadius: 10,\r\n    overflow: \"hidden\",\r\n    marginTop: 16,\r\n  },\r\n\r\n  map: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n\r\n  mapMarker: {\r\n    width: 90,\r\n    height: 80,\r\n  },\r\n\r\n  mapMarkerContainer: {\r\n    width: 90,\r\n    height: 70,\r\n    backgroundColor: \"#34CB79\",\r\n    flexDirection: \"column\",\r\n    borderRadius: 8,\r\n    overflow: \"hidden\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  mapMarkerImage: {\r\n    width: 90,\r\n    height: 45,\r\n    resizeMode: \"cover\",\r\n  },\r\n\r\n  mapMarkerTitle: {\r\n    flex: 1,\r\n    fontFamily: \"Roboto_400Regular\",\r\n    color: \"#FFF\",\r\n    fontSize: 13,\r\n    lineHeight: 23,\r\n  },\r\n\r\n  itemsContainer: {\r\n    flexDirection: \"row\",\r\n    marginTop: 16,\r\n    marginBottom: 32,\r\n  },\r\n\r\n  item: {\r\n    backgroundColor: \"#fff\",\r\n    borderWidth: 2,\r\n    borderColor: \"#eee\",\r\n    height: 120,\r\n    width: 120,\r\n    borderRadius: 8,\r\n    paddingHorizontal: 16,\r\n    paddingTop: 20,\r\n    paddingBottom: 16,\r\n    marginRight: 8,\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  selectedItem: {\r\n    borderColor: \"#34CB79\",\r\n    borderWidth: 2,\r\n  },\r\n\r\n  itemTitle: {\r\n    fontFamily: \"Roboto_400Regular\",\r\n    textAlign: \"center\",\r\n    fontSize: 13,\r\n  },\r\n});\r\n\r\nexport default Points;\r\n"]},"metadata":{},"sourceType":"module"}